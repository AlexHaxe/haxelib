env:
  global:
    # deploy_key_decrypt
    - secure: "cWYcbB7z97sW4yZtz9qcYrEhFZktNjQMOraPm7Vy0FsCMqb4r314Fk8rJze+yDbOKGdsIz6VNHE8nlsQN3EgGiVFJnF8xv6GAlfHPuaVomP2vO7W0A+l7xVy2/326MQJP8JoMgdebDi71yxKeEhYA+mVliI9qql9yfD2YOBmilQ="

matrix:
  include:
    # haxe development + neko master
    - os: linux
      sudo: required
      dist: trusty
      env:
        - TRAVIS_HAXE_VERSION=development
      before_install:
        - sudo add-apt-repository ppa:haxe/snapshots -y
        - sudo apt-get update
        - sudo apt-get install haxe=1:3.3* neko-dev libapache2-mod-neko mysql-server mysql-client -y
        - mkdir ~/haxelib && haxelib setup ~/haxelib
        - sudo usermod -a -G travis www-data
    # haxe 3.2.1 + neko 2.1.0
    - os: linux
      sudo: required
      dist: trusty
      env:
        - TRAVIS_HAXE_VERSION=3.2.1
        - DEPLOY=1
      before_install:
        - sudo add-apt-repository ppa:haxe/releases -y
        - sudo apt-get update
        - sudo apt-get install haxe=1:3.2.1* neko-dev libapache2-mod-neko mysql-server mysql-client -y
        - mkdir ~/haxelib && haxelib setup ~/haxelib
        - sudo usermod -a -G travis www-data
    # haxe 3.1.3 + neko 2.0.0
    - os: linux
      language: haxe
      haxe: 3.1.3
      sudo: required
      dist: trusty
      env:
        - USE_DOCKER=1
      services: [docker]
      before_install:
        - sudo apt-get update
        - sudo apt-get -o Dpkg::Options::=--force-confnew install docker-engine -y
        - docker --version
        # https://docs.travis-ci.com/user/docker/#Using-Docker-Compose
        - sudo rm /usr/local/bin/docker-compose
        - curl -L https://github.com/docker/compose/releases/download/1.6.2/docker-compose-`uname -s`-`uname -m` > docker-compose
        - chmod +x docker-compose
        - sudo mv docker-compose /usr/local/bin
    # Mac
    - os: osx
      language: haxe
      haxe: development
    - os: osx
      language: haxe
      haxe: 3.2.1
    - os: osx
      language: haxe
      haxe: 3.1.3

install:
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then
      brew update;
    fi
  - npm -g install bower
  - yes | haxelib install all
  - yes | haxelib install tora
  # We need https://github.com/ufront/ufront-uftasks/commit/1ef09322eb51cf5d16bc1f9abeecaeb30542b62f
  - if [ "${TRAVIS_HAXE_VERSION}" = "development" ]; then
    yes | haxelib git ufront-uftasks https://github.com/ufront/ufront-uftasks.git;
    fi
  # We need https://github.com/ufront/ufront-ufadmin/commit/4558fe0bb3534cda53396bc3b4b099a867f5b6a6
  - if [ "${TRAVIS_HAXE_VERSION}" = "development" ]; then
    yes | haxelib git ufront-ufadmin https://github.com/ufront/ufront-ufadmin.git;
    fi
  # Make sure hscript is >= 2.0.5
  - yes | haxelib update hscript
  # Make sure hscript is > 0.1.4
  - yes | haxelib update mcli
  - haxelib list
  - haxelib run tora > /dev/null 2>&1 &

script:
  # run our CI script
  - haxe ci.hxml
  # Deploy to lib.haxe.org
  - if [ -n "$deploy_key_decrypt" ] && [ "$TRAVIS_OS_NAME" = "linux" ] && [ "$TRAVIS_BRANCH" = "master" ] && [ -n "$DEPLOY" ]; then
      openssl aes-256-cbc -k "$deploy_key_decrypt" -in deploy_key.enc -out deploy_key -d;
      chmod 600 deploy_key;
      chmod 600 ~/.ssh/config;
      eval `ssh-agent -s`;
      ssh-add deploy_key;
      scp haxelib@lib.haxe.org:/data/haxelib/www/.htaccess www/;
      scp haxelib@lib.haxe.org:/data/haxelib/www/dbconfig.json www/;
      pushd www;
      bower install;
      popd;
      git config --global user.name "TravisCI";
      git config --global user.email "travisci@haxe.org";
      haxelib run ufront deploy;
    fi

cache:
  directories:
    - deploy

addons:
  ssh_known_hosts: lib.haxe.org

deploy:
  provider: elasticbeanstalk
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key: $AWS_SECRET_KEY
  region: $AWS_REGION
  app: $EB_APP
  env: ${TRAVIS_BRANCH}-lib-haxe-org
  bucket_name: $EB_BUCKET
  on:
    all_branches: true
    condition: $DEPLOY && ($TRAVIS_BRANCH = master || $TRAVIS_BRANCH = development)
